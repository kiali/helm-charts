# This is required for "openshift" auth strategy.
# You have to know ahead of time what your Route URL will be because
# right now the helm chart can't figure this out at runtime (it would
# need to wait for the Kiali Route to be deployed and for OpenShift
# to start it up). If someone knows how to update this helm chart to
# do this, a PR would be welcome.
kiali_route_url: ""

#
# Settings that mimic the Kiali CR which are placed in the ConfigMap.
# Note that only those values used by the Helm Chart will be here.
#

additional_display_details:
- annotation: kiali.io/api-spec
  icon_annotation: kiali.io/api-type
  title: API Documentation

istio_namespace: "" # default is where Kiali is installed

auth:
  openid: {}
  openshift: {}
  strategy: ""

clustering:
  autodetect_secrets:
    enabled: true
    label: "kiali.io/multiCluster=true"
  clusters: []

deployment:
  additional_service_yaml: {}
  affinity:
    node: {}
    pod: {}
    pod_anti: {}
  # The Kiali server helm chart only supports cluster-wide access; setting cluster_wide_access to false is not supported.
  # For more control over what the Kial Service Account can see, use the Kiali Operator.
  cluster_wide_access: true
  configmap_annotations: {}
  custom_envs: []
  custom_secrets: []
  dns:
    config: {}
    policy: ""
  host_aliases: []
  hpa:
    api_version: "autoscaling/v2"
    spec: {}
  image_digest: "" # use "sha256" if image_version is a sha256 hash (do NOT prefix this value with a "@")
  image_name: quay.io/kiali/kiali
  image_pull_policy: "Always"
  image_pull_secrets: []
  image_version: ${HELM_IMAGE_TAG} # version like "v1.39" (see: https://quay.io/repository/kiali/kiali?tab=tags) or a digest hash
  ingress:
    additional_labels: {}
    class_name: "nginx"
    #enabled:
    override_yaml:
      metadata: {}
  instance_name: "kiali"
  logger:
    log_format: "text"
    log_level: "info"
    time_field_format: "2006-01-02T15:04:05Z07:00"
    sampler_rate: "1"
  node_selector: {}
  pod_annotations: {}
  pod_labels: {}
  priority_class_name: ""
  probes:
    liveness:
      initial_delay_seconds: 5
      period_seconds: 30
    readiness:
      initial_delay_seconds: 5
      period_seconds: 30
    startup:
      failure_threshold: 6
      initial_delay_seconds: 30
      period_seconds: 10
  remote_cluster_resources_only: false
  # if deployment.hpa is defined, this replicas setting will be ignored
  replicas: 1
  resources:
    requests:
      cpu: "10m"
      memory: "64Mi"
    limits:
      memory: "1Gi"
  secret_name: "kiali"
  security_context: {}
  service_annotations: {}
  service_type: ""
  tolerations: []
  version_label: ${HELM_IMAGE_TAG} # v1.39 # v1.39.0 # see: https://quay.io/repository/kiali/kiali?tab=tags
  view_only_mode: false

external_services:
  custom_dashboards:
    enabled: true
  istio:
    root_namespace: ""

identity: {}
  #cert_file:
  #private_key_file:

kiali_feature_flags:
  disabled_features: []
  validations:
    ignore: ["KIA1301"]

login_token:
  signing_key: ""

server:
  port: 20001
  #node_port:
  observability:
    metrics:
      enabled: true
      port: 9090
  web_root: ""
